name: üß™ Validate WSL2 Baseline Setup

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:   # manual run

jobs:
  test-build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout your repo
      - name: üß© Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Prepare environment
      - name: üß© Update base system
        run: |
          sudo apt-get update -y
          sudo apt-get install -y curl git bash jq python3 python3-pip

      # 3Ô∏è‚É£ Run your setup script
      - name: ‚öôÔ∏è Run baseline setup script
        run: |
          chmod +x ./run.sh
          ./run.sh

      # 4Ô∏è‚É£ Verify critical tools
      - name: üßæ Verify tool availability
        run: |
          echo "-------------------------------------------------------------"
          echo "[i] Verifying essential binaries..."
          for tool in git curl htop nmap jq docker cmatrix; do
            if command -v "$tool" >/dev/null 2>&1; then
              echo "[#] $tool available: $(command -v "$tool")"
            else
              echo "[x] $tool missing!"
              exit 1
            fi
          done

          echo "[i] Checking Python version..."
          python --version || exit 1
          pip3 --version || exit 1
          pip3 show pipenv || { echo "[x] pipenv missing"; exit 1; }

          echo "[i] Checking Docker..."
          docker --version || { echo "[x] docker missing"; exit 1; }

          echo "[i] Listing top-level packages:"
          dpkg -l | grep -E "cmatrix|nmap|htop|git" || true
          echo "[#] Verification complete."

      # 5Ô∏è‚É£ Optional: artifact with install logs
      - name: üì¶ Upload install logs (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: run-log
          path: |
            ./run.log
            ~/.bashrc
